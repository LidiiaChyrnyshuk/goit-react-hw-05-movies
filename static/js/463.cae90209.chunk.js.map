{"version":3,"file":"static/js/463.cae90209.chunk.js","mappings":"6MAEaA,E,QAAeC,EAAAA,GAAH,mF,SCiCzB,EAhCiB,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAClB,OACE,SAACF,EAAD,UACGE,EAAKC,KAAI,SAAAC,GAAI,OACZ,2BACE,gBACEC,IACED,EAAKE,aAAL,0CACuCF,EAAKE,cACxC,sCAENC,IAAG,UAAKH,EAAKI,SAEf,uBAAIJ,EAAKI,QACT,yBAAG,aAAWJ,EAAKK,eAVZL,EAAKM,GADF,KAgBnB,E,uCCID,EAnBa,WACX,OAAwBC,EAAAA,EAAAA,UAAS,MAAjC,eAAOT,EAAP,KAAaU,EAAb,KACA,GAAkCD,EAAAA,EAAAA,WAAS,GAA3C,eAAOE,EAAP,KAAkBC,EAAlB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAOR,OALAE,EAAAA,EAAAA,YAAU,WACRH,GAAa,IACbI,EAAAA,EAAAA,IAAoBH,GAASI,KAAKP,GAASQ,QAAQN,GAAa,GACjE,GAAE,CAACC,KAGF,2BACGF,IAAa,SAACQ,EAAA,EAAD,IACI,KAAb,OAAJnB,QAAI,IAAJA,OAAA,EAAAA,EAAMoB,UAAgB,uBAAG,sCACzBpB,IAAQ,SAAC,EAAD,CAAUA,KAAMA,MAG9B,C,kMCtBDqB,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EAAc,IAAIC,gBAAgB,CACtCC,OAAQ,MACRC,QAAS,mCACTC,SAAU,QACVC,eAAe,EACfC,QAAS,CACPC,OAAQ,sBAICC,EAAoB,mCAAG,4FACrB,oBADqB,SAEXT,EAAAA,EAAAA,IAAA,UADV,oBACU,YAAqBC,IAFV,uBAE1BS,EAF0B,EAE1BA,KAF0B,kBAG3BA,EAAKC,SAHsB,2CAAH,qDAMpBC,EAAgB,mCAAG,WAAMC,GAAN,+EACjB,gBADiB,SAEPb,EAAAA,EAAAA,IAAA,UADV,gBACU,YAAqBC,EAArB,kBAA0CY,IAFnC,uBAEtBH,EAFsB,EAEtBA,KAFsB,kBAGvBA,EAAKC,SAHkB,2CAAH,sDAMhBG,EAAmB,mCAAG,WAAMtB,GAAN,kFAC3BuB,EAD2B,iBACVvB,GADU,SAEVQ,EAAAA,EAAAA,IAAA,UAAae,EAAb,YAAqBd,IAFX,uBAEzBS,EAFyB,EAEzBA,KAFyB,kBAG1BA,GAH0B,2CAAH,sDAMnBf,EAAmB,mCAAG,WAAMH,GAAN,kFAC3BuB,EAD2B,iBACVvB,EADU,qBAEVQ,EAAAA,EAAAA,IAAA,UAAae,EAAb,YAAqBd,IAFX,uBAEzBS,EAFyB,EAEzBA,KAFyB,kBAG1BA,EAAK/B,MAHqB,2CAAH,sDAMnBqC,EAAmB,mCAAG,WAAMxB,GAAN,kFAC3BuB,EAD2B,iBACVvB,EADU,qBAEVQ,EAAAA,EAAAA,IAAA,UAAae,EAAb,YAAqBd,IAFX,uBAEzBS,EAFyB,EAEzBA,KAFyB,kBAG1BA,EAAKC,SAHqB,2CAAH,qD","sources":["components/CastList/CastList.styled.jsx","components/CastList/CastList.jsx","components/Cast/Cast.jsx","services/moviesAPI.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const CastListInfo = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n`;\n","import PropTypes from 'prop-types';\nimport { CastListInfo } from './CastList.styled';\n\nconst CastList = ({ cast }) => {\n  return (\n    <CastListInfo>\n      {cast.map(item => (\n        <li key={item.id}>\n          <img\n            src={\n              item.profile_path\n                ? `https://image.tmdb.org/t/p/w500/${item.profile_path}`\n                : 'https://via.placeholder.com/100x150'\n            }\n            alt={`${item.name}`}\n          />\n          <p>{item.name}</p>\n          <p>Character:{item.character}</p>\n        </li>\n      ))}\n    </CastListInfo>\n  );\n};\n\nCastList.propTypes = {\n  cast: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      profile_path: PropTypes.string,\n      name: PropTypes.string.isRequired,\n      character: PropTypes.string.isRequired,\n    }).isRequired\n  ),\n};\n\nexport default CastList;\n","import CastList from 'components/CastList/CastList';\nimport Loader from 'components/Loader/Loader';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCreditsById } from 'services/moviesAPI';\n\nconst Cast = () => {\n  const [cast, setCast] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    setIsLoading(true);\n    getMovieCreditsById(movieId).then(setCast).finally(setIsLoading(false));\n  }, [movieId]);\n\n  return (\n    <div>\n      {isLoading && <Loader />}\n      {cast?.length === 0 && <p>Sorry, we don't have information.</p>}\n      {cast && <CastList cast={cast} />}\n    </div>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst seachParams = new URLSearchParams({\n  method: 'GET',\n  api_key: '2bd24135f91a853c6b382cb0cbb4f46b',\n  language: 'en-US',\n  include_adult: false,\n  headers: {\n    accept: 'application/json',\n  },\n});\n\nexport const getTrendingMoviesDay = async () => {\n  const path = '/trending/all/day';\n  const { data } = await axios.get(`${path}?${seachParams}`);\n  return data.results;\n};\n\nexport const getMoviesByTitle = async query => {\n  const path = '/search/movie';\n  const { data } = await axios.get(`${path}?${seachParams}&query=${query}`);\n  return data.results;\n};\n\nexport const getMovieDetailsById = async movieId => {\n  const path = `/movie/${movieId}`;\n  const { data } = await axios.get(`${path}?${seachParams}`);\n  return data;\n};\n\nexport const getMovieCreditsById = async movieId => {\n  const path = `/movie/${movieId}/credits`;\n  const { data } = await axios.get(`${path}?${seachParams}`);\n  return data.cast;\n};\n\nexport const getMovieReviewsById = async movieId => {\n  const path = `/movie/${movieId}/reviews`;\n  const { data } = await axios.get(`${path}?${seachParams}`);\n  return data.results;\n};\n"],"names":["CastListInfo","styled","cast","map","item","src","profile_path","alt","name","character","id","useState","setCast","isLoading","setIsLoading","movieId","useParams","useEffect","getMovieCreditsById","then","finally","Loader","length","axios","seachParams","URLSearchParams","method","api_key","language","include_adult","headers","accept","getTrendingMoviesDay","data","results","getMoviesByTitle","query","getMovieDetailsById","path","getMovieReviewsById"],"sourceRoot":""}